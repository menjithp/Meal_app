{"version":3,"file":"static/js/263.84e4ab3d.chunk.js","mappings":"4NAEA,EADiB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,oPAAwP,KAAQ,OAAQ,MAAS,U,UCMraA,EAAa,SAAoBC,EAAOC,GAC1C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,GAAS,CAAC,EAAGJ,EAAO,CACpEC,IAAKA,EACLI,KAAMC,IAEV,EAIA,MAA4BJ,EAAAA,WAAiBH,G,yDCArCQ,EAAgBC,EAAAA,EAAAA,MAATC,EAASD,EAAAA,EAAAA,KAET,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,OAAO,IAC9CG,GAAWC,EAAAA,EAAAA,MACXF,EAAQG,KAAKC,MAAMD,KAAKE,UAAUP,EAAQQ,gBAEhDC,EAAAA,EAAAA,YAAU,WACHP,GAAOJ,EAAS,IACvB,GAAG,IACH,IAAMY,GAAaC,EAAAA,EAAAA,UAAQ,iBAAK,CAC9B,QAAS,OACT,MAAS,QACT,gBAAiB,QACjB,mBAAoB,QACpB,eAAgB,SAChB,cAAe,aACf,UAAa,YACb,QAAW,UACX,QAAW,UACX,OAAU,SACX,GAAE,IAEH,OAAKT,GACLA,EAAMU,OAAS,6BAIbC,EAAAA,EAAAA,MAAA,WAASC,UAAU,aAAYC,SAAA,EAC7BC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAAAF,UACLF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDC,SAAA,EAChEC,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CAACC,QAAS,kBAAMrB,EAASK,EAASD,MAAM,EAACa,UAC9CC,EAAAA,EAAAA,KAACI,EAAAA,EAAiB,OAEpBJ,EAAAA,EAAAA,KAACtB,EAAK,CACJoB,UAAU,gDACVO,MAAO,EAAEN,SACV,mBAGDC,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CAACC,QAAS,kBAAMrB,EAAS,IAAI,EAACiB,UACnCC,EAAAA,EAAAA,KAAC9B,EAAU,YAIjB8B,EAAAA,EAAAA,KAACrB,EAAAA,EAAU,CAAAoB,UACTF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGO,OAAOC,KAAKb,GAAYc,KAAI,SAACC,EAAKC,GAAK,OACtCV,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CAAAZ,SAAA,EACFC,EAAAA,EAAAA,KAACY,EAAAA,EAAG,CAAAb,UACFC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,mBAElBE,EAAAA,EAAAA,KAACY,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAElB,UACrCC,EAAAA,EAAAA,KAACpB,EAAI,CAACsC,KAAK,YAAYC,QAAM,EAAApB,SAC1BU,OAGLT,EAAAA,EAAAA,KAACY,EAAAA,EAAG,CAAAb,UACFC,EAAAA,EAAAA,KAACpB,EAAI,CACHkB,UAAmB,WAARW,GAAoB,kBAC/BS,KAAc,WAART,EAAmB,UAAY,YAAYV,SAEhDb,EAAMQ,EAAWe,YAfjBC,EAmBJ,KAEPV,EAAAA,EAAAA,KAAA,kBA9CW,IAmDrB,C","sources":["../node_modules/@ant-design/icons-svg/es/asn/HomeFilled.js","../node_modules/@ant-design/icons/es/icons/HomeFilled.js","components/orderSummary/index.js"],"sourcesContent":["// This icon file is generated automatically.\nvar HomeFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M946.5 505L534.6 93.4a31.93 31.93 0 00-45.2 0L77.5 505c-12 12-18.8 28.3-18.8 45.3 0 35.3 28.7 64 64 64h43.4V908c0 17.7 14.3 32 32 32H448V716h112v224h265.9c17.7 0 32-14.3 32-32V614.3h43.4c17 0 33.3-6.7 45.3-18.8 24.9-25 24.9-65.5-.1-90.5z\" } }] }, \"name\": \"home\", \"theme\": \"filled\" };\nexport default HomeFilled;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport HomeFilledSvg from \"@ant-design/icons-svg/es/asn/HomeFilled\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar HomeFilled = function HomeFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: HomeFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  HomeFilled.displayName = 'HomeFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(HomeFilled);","/*************************\n * author   : Menjith P\n * Purpose  : Order summary/Order Confrmation View\n *\n *******************/\n\n//default packages\nimport { useEffect,useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n//antd packages\nimport { ArrowLeftOutlined, HomeFilled } from \"@ant-design/icons\";\nimport { Col, Row, Typography, Button } from \"antd\";\n//Component imports\nimport Header from \"../header\";\n\nconst { Title, Text } = Typography;\n\nexport default function Order() {\n  const navigate = useNavigate();\n  const foodapp = useSelector((state) => state.foodapp);\n  const location = useLocation();\n  const state = JSON.parse(JSON.stringify(foodapp.ordersummary));\n\n  useEffect(() => {\n    if (!state) navigate(\"/\");\n  }, []);\n  const filterkeys = useMemo(()=>({\n    \"Name:\": \"name\",\n    \"Email\": \"email\",\n    \"Mobile number\": \"phone\",\n    \"Indididual Price\": \"price\",\n    \"Total Orders\": \"orders\",\n    \"Total Price\": \"totalprice\",\n    \"Residence\": \"residence\",\n    \"Address\": \"address\",\n    \"Pincode\": \"pincode\",\n    \"Status\": \"status\",\n  }),[]);\n\n  if (!state) return null;\n  state.status = \"Order placed Successfully\";\n\n//return <p>{state.name}</p>\n  return (\n    <section className=\"order-page\">\n      <Header>\n        <div className=\"d-flex align-items-center justify-content-between\">\n          <Button onClick={() => navigate(location.state)}>\n            <ArrowLeftOutlined />\n          </Button>\n          <Title\n            className=\"font-weight-100 letter-spacing-1 violet-color\"\n            level={3}\n          >\n            Order Summary\n          </Title>\n          <Button onClick={() => navigate(\"/\")}>\n            <HomeFilled />\n          </Button>\n        </div>\n      </Header>\n      <Typography>\n        <ul>\n          {Object.keys(filterkeys).map((key, index) => (\n            <li key={index}>\n              <Row>\n                <Col>\n                  <span className=\"list-marker\"></span>\n                </Col>\n                <Col xs={8} sm={8} md={8} lg={6} xl={6}>\n                  <Text type=\"secondary\" strong>\n                    {key}\n                  </Text>\n                </Col>\n                <Col>\n                  <Text\n                    className={key === \"Status\" && \"font-weight-100\"}\n                    type={key === \"Status\" ? \"success\" : \"secondary\"}\n                  >\n                    {state[filterkeys[key]]}\n                  </Text>\n                </Col>\n              </Row>\n            </li>\n          ))}\n          <li></li>\n        </ul>\n      </Typography>\n    </section>\n  );\n}\n"],"names":["HomeFilled","props","ref","React","AntdIcon","_extends","icon","HomeFilledSvg","Title","Typography","Text","Order","navigate","useNavigate","foodapp","useSelector","state","location","useLocation","JSON","parse","stringify","ordersummary","useEffect","filterkeys","useMemo","status","_jsxs","className","children","_jsx","Header","Button","onClick","ArrowLeftOutlined","level","Object","keys","map","key","index","Row","Col","xs","sm","md","lg","xl","type","strong"],"sourceRoot":""}