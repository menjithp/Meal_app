{"version":3,"file":"static/js/751.f4ca8aeb.chunk.js","mappings":"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","sources":["components/meals/configData/formConfig.js","components/meals/mealForm.js","components/meals/skeleton/mealItem.js","components/meals/mealItem.js"],"sourcesContent":["const residences = [\r\n  {\r\n    value: 'India',\r\n    label: 'India',\r\n    children: [\r\n      {\r\n        value: 'Tamil Nadu',\r\n        label: 'Tamil Nadu',\r\n        children: [\r\n          {\r\n            value: 'Chennai',\r\n            label: 'Chennai',\r\n          },\r\n          {\r\n            value: 'Namakkal',\r\n            label: 'Namakkal',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nexport {tailFormItemLayout,formItemLayout,residences}","/*************************\n * author   : Menjith P\n * Purpose  : Meal Order Form View\n * \n *******************/\n\n\n//default imports\nimport { useNavigate ,useLocation} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useCallback,useMemo } from 'react';\n//antd imports\nimport {\n  Button,\n  Cascader,\n  Form,\n  Input,\n  InputNumber,\n  Select,\n} from 'antd';\n//redux imports\nimport {ordersummary} from '../../store/reducer'\n//objects imports\nimport  {tailFormItemLayout,formItemLayout,residences} from './configData/formConfig'\n\nconst { Option } = Select;\n\nconst App = () => {\n  const [form] = Form.useForm();\n  const dispatch=useDispatch()\n  const navigate=useNavigate()\n  const prev=useLocation()\n\n  const onFinish = useCallback((values) => {\n    navigate(\"/order-summary\",{state:prev.pathname})\n    dispatch(ordersummary(values))\n\n    console.log(\"values\",values)\n  },[prev])\n\n\n  const prefixSelector = useMemo(()=>\n    <Form.Item name=\"prefix\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option value=\"91\">+91</Option>\n      </Select>\n    </Form.Item>,[]\n  );\n  const suffixSelector = useMemo(()=>\n    <Form.Item name=\"suffix\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n        disabled\n      >\n        <Option value=\"INR\">₹</Option>\n      </Select>\n    </Form.Item>\n  ,[]);\n\n\n\n  const validateLength=useCallback(async(rule,value)=>{\n    let len;\n    if(rule.field===\"phone\")len=10\n    else len=6\n    if(value && value.toString().length<len){\n       throw new Error(rule.field===\"phone\"?\"Indian Mobile Number should be atleast 10\":\n      \"Indian Pincode should be atleast 6\")\n    }\n  },[])\n\n  const validateNumber=useCallback(async(rule,value)=>{\n    if(value && isNaN(value))throw new Error(rule.field +\" should be number\")\n  },[])\n\n  \n\n  return (\n    <Form\n      {...formItemLayout}\n      form={form}\n      name=\"register\"\n      onFinish={onFinish}\n      initialValues={{\n        prefix: '+91',\n        residence: [\"India\",\"Tamil Nadu\",\"Chennai\"],\n        suffix: 'INR',\n        \"price\":10,\n        \"orders\":1,\n        \"totalprice\":10\n      }}\n      style={{\n        maxWidth: 600,\n      }}\n      scrollToFirstError\n    >\n      <Form.Item\n        name=\"email\"\n        label=\"E-mail\"\n        validateTrigger=\"onBlur\"\n        hasFeedback\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          },\n          {\n            required: true,\n            message: 'Please input your E-mail!',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"name\"\n        label=\"Name\"\n        validateTrigger=\"onBlur\"\n        hasFeedback\n        tooltip=\"Input your name?\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Name!',\n            whitespace: true,\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        name=\"phone\"\n        label=\"Phone Number\"\n        validateTrigger=\"onBlur\"\n        hasFeedback\n        rules={[\n          {\n            required: true,\n            message: 'Please input your phone number!',\n          },{\n            validator:validateLength\n          }\n        ]}\n      >\n        <Input\n          addonBefore={prefixSelector}\n          style={{\n            width: '100%',\n          }}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"price\"\n        label=\"Individual Price\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input Individual Price!',\n          }\n        ]}\n      >\n        <InputNumber\n          addonAfter={suffixSelector}\n          disabled\n          style={{\n            width: '100%',\n          }}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"orders\"\n        validateTrigger=\"onBlur\"\n        hasFeedback\n        label=\"Total orders\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input no of orders!',\n          },\n        ]}\n      >\n          <InputNumber onChange={(e)=>{\n            form.setFieldsValue({\n              totalprice:form.getFieldsValue().price*e\n            })\n          }} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"totalprice\"\n        label=\"Total Price\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Total Price!',\n          },\n        ]}\n      >\n        <InputNumber disabled\n          style={{\n            width: '100%',\n          }}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name=\"residence\"\n        label=\"Habitual Residence\"\n        validateTrigger=\"onBlur\"\n        hasFeedback\n        rules={[\n          {\n            type: 'array',\n            required: true,\n            message: 'Please select your habitual residence!',\n          },\n        ]}\n      >\n        <Cascader options={residences} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"address\"\n        validateTrigger=\"onBlur\"\n        hasFeedback\n        label=\"Shipping Address\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input shipping address',\n          },\n        ]}\n      >\n        <Input.TextArea showCount maxLength={100} />\n      </Form.Item>\n\n      <Form.Item\n        name=\"pincode\"\n        validateTrigger=\"onBlur\"\n        hasFeedback\n        label=\"pincode\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your shipping pincode!',\n          },\n          {\n            validator:validateLength\n          },\n          {\n            validator:validateNumber\n          }\n        ]}\n      >\n          <Input/>\n      </Form.Item>\n      <Form.Item {...tailFormItemLayout} className='position-sticky bottom-0 bg-white p-3'>\n        <Button type=\"primary\" htmlType=\"submit\" >\n          Purchase\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nexport default App;","/*************************\n * author   : Menjith P\n * Purpose  : Meal Items Skeleton\n * \n *******************/\n//default imports\nimport React from 'react'\n\n//antd imports\nimport {\n  Divider,\n  Skeleton,\n  Flex,\n  Row,\n  Col,\n} from \"antd\";\n\n\nconst ItemSkeleton = () => {\n  return (\n    <>\n      <br />\n      <Flex gap=\"large\">\n        <Skeleton.Button active={true} size={\"default\"} shape={\"default\"} />\n        <Skeleton.Input active={true} size={\"default\"} block={\"default\"} />\n        <Skeleton.Input active={true} size={\"default\"} />\n      </Flex>\n      <br />\n      <Flex align=\"center\" justify=\"center\">\n        <Skeleton.Input\n          active={true}\n          size={\"default\"}\n          style={{ width: \"300px\" }}\n        />\n      </Flex>\n      <Divider />\n      <Flex align=\"center\" justify=\"center\">\n        <Skeleton.Image\n          active={true}\n          size={\"large\"}\n          shape={\"default\"}\n          style={{ width: \"300px\", height: \"200px\" }}\n        />\n      </Flex>\n      <br />\n      <br />\n      <Skeleton />\n      <br />\n      <br />\n      <Skeleton.Input active={true} size={\"default\"} />\n      <div style={{ marginTop: \"1rem\" }} />\n      {[...Array(5)].map((item, index) => (\n        <React.Fragment key={index}>\n          {\" \"}\n          <Row>\n            <Col xs={3}>\n              <Skeleton.Input active={true} size={\"small\"} />\n            </Col>\n            <Col xs={12} sm={12} md={8} lg={6} xl={6}>\n              <Skeleton.Input active={true} size={\"small\"} />\n            </Col>\n            <Col>\n              <Skeleton.Input active={true} size={\"small\"} />\n            </Col>\n          </Row>\n          <br />\n        </React.Fragment>\n      ))}\n    </>\n  );\n};\nexport default ItemSkeleton;\n","/*************************\n * author   : Menjith P\n * Purpose  : Listing Meal Items\n *\n *******************/\n\n//default imports\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState,useMemo,useEffect } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\n//antd imports\nimport { Image, Button, Typography, Divider, Col, Row } from \"antd\";\nimport { ArrowLeftOutlined, YoutubeFilled } from \"@ant-design/icons\";\n//redux imports\nimport {errormealfetch} from '../../store/reducer'\n//components import\nimport Header from \"../header\";\nimport Form from \"./mealForm\";\nimport MealItemSkeleton from \"./skeleton/mealItem\";\n//hooks imports\nimport { useFetchOneMeal } from \"../../hooks/meals\";\n\nconst { Title, Paragraph, Text, Link } = Typography;\n\nexport default function MealItem() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const foodapp=useSelector((state)=>state.foodapp)\n  const dispatch=useDispatch()\n\n  const { state, error } = useFetchOneMeal(location.pathname.replace(\"/\", \"\"));\n  const [Checkout, setcheckout] = useState(true);\n  const [count, setcount] = useState([]);\n\n  useMemo(() => {\n    if (!state) return\n    let localcount = [];\n    Object.keys(state).forEach((key) => {\n      if (key.includes(\"strIngredient\") && !!state[key]) {\n        localcount.push(retnum(key));\n      }\n    });\n    setcount(localcount)\n  }, [state]);\n\n\n  useEffect(()=>{\n    if(error)dispatch(errormealfetch(error))\n},[state,error])\n\n\n  if (!state) return <MealItemSkeleton />;\n  if (error)\n    return (\n      <p className=\"font-weight-100 letter-spacing-1 mx-auto fit-content mt-2 red-color\">\n        {foodapp.error.individual}\n      </p>\n    );\n\n  return (\n    <section className=\"mealitem position-relative\">\n      <Header>\n          <div className=\"d-flex justify-content-between\">\n            <Button onClick={() => navigate(\"/\")}>\n              <ArrowLeftOutlined />\n            </Button>\n            <div className=\"text-align-center\">\n              <Title\n                className=\"letter-spacing-1 font-weight-100 violet-color responsive-head-title\"\n                level={2}\n              >\n                {state?.strMeal}\n              </Title>\n              <Paragraph className=\"sm-column mb-0 d-flex align-items-center justify-content-center\">\n                {state?.strArea && (\n                  <>\n                    <Text className=\"letter-spacing-05 font-weight-100 \">\n                      {state?.strArea}\n                    </Text>\n                    <Divider className=\"divider\" type=\"vertical\" />\n                  </>\n                )}\n                {state?.strCategory && (\n                  <>\n                    <Text\n                      className=\"letter-spacing-05 font-weight-100 \"\n                      type=\"success\"\n                    >\n                      {state?.strCategory}\n                    </Text>\n                    <Divider className=\"divider\" type=\"vertical\" />\n                  </>\n                )}\n                {state?.strTags && (\n                  <>\n                    <Text\n                      className=\"letter-spacing-05 font-weight-100 \"\n                      type=\"warning\"\n                    >\n                      {\"#\" + state?.strTags.split(\",\").join(\" #\")}\n                    </Text>\n                    <Divider className=\"divider\" type=\"vertical\" />\n                  </>\n                )}\n                {state?.strYoutube && (\n                  <>\n                    <Link strong target=\"_blank\" href={state?.strYoutube}>\n                      <YoutubeFilled\n                        className=\"red-color\"\n                        style={{ fontSize: \"30px\" }}\n                      />\n                    </Link>\n                  </>\n                )}\n              </Paragraph>\n            </div>\n\n            <Button\n              onClick={() => setcheckout((prev) => !prev)}\n              type=\"primary\"\n              danger={!Checkout ? true : false}\n            >\n              <span className=\"d-meal-block\">\n                {Checkout ? \"Checkout Product\" : \"Cancel Checkout\"}\n              </span>\n              <span className=\"d-meal-none\">{Checkout ? \"Buy\" : \"X\"}</span>\n            </Button>\n          </div>\n      </Header>\n\n      <article>\n        <div className=\"text-align-center\">\n          <Image\n            className=\"responsive-image-mealitem text-align-center\"\n            src={state?.strMealThumb}\n          />\n        </div>\n        <Typography>\n          <Title\n            className=\"violet-color letter-spacing-05 font-weight-75\"\n            level={3}\n          >\n            Steps for Preparation\n          </Title>\n          <Paragraph className=\"letter-spacing-03\" type=\"secondary\">\n            {state?.strInstructions}\n          </Paragraph>\n          <Title\n            className=\"violet-color letter-spacing-05 font-weight-75\"\n            level={3}\n          >\n            Ingredients\n          </Title>\n          <ul>\n            {count.map((item, index) => (\n              <li className=\"\" key={index}>\n                <Row>\n                  <Col>\n                    <span className=\"list-marker\"></span>\n                  </Col>\n                  <Col\n                    xs={12}\n                    sm={12}\n                    md={8}\n                    lg={6}\n                    xl={6}\n                  >\n                    <Text type=\"secondary\" strong>\n                      {state[\"strIngredient\" + item]}\n                    </Text>\n                  </Col>\n                  <Col>\n                    <Text type=\"secondary\" strong>\n                      {\" \"}\n                      {state[\"strMeasure\" + item]}{\" \"}\n                    </Text>\n                  </Col>\n                </Row>\n              </li>\n            ))}\n          </ul>\n        </Typography>\n      </article>\n     \n      <div className={`${!Checkout && \"addedclass\"} teslastyle`}>\n         <Form />\n      </div>\n    </section>\n  );\n}\n\nfunction retnum(str) {\n  var num = str.replace(/[^0-9]/g, \"\");\n  return parseInt(num, 10);\n}\n"],"names":["residences","value","label","children","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Option","Select","_Form$useForm","Form","form","_slicedToArray","dispatch","useDispatch","navigate","useNavigate","prev","useLocation","onFinish","useCallback","values","state","pathname","ordersummary","console","log","prefixSelector","useMemo","_jsx","name","noStyle","style","width","suffixSelector","disabled","validateLength","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rule","len","wrap","_context","next","field","toString","length","Error","stop","_x","_x2","apply","arguments","validateNumber","_ref2","_callee2","_context2","isNaN","_x3","_x4","_jsxs","_objectSpread","initialValues","prefix","residence","suffix","maxWidth","scrollToFirstError","validateTrigger","hasFeedback","rules","type","message","required","Input","tooltip","whitespace","validator","addonBefore","InputNumber","addonAfter","onChange","e","setFieldsValue","totalprice","getFieldsValue","price","Cascader","options","showCount","maxLength","className","Button","htmlType","_Fragment","Flex","gap","Skeleton","active","size","shape","block","align","justify","Divider","height","marginTop","_toConsumableArray","Array","map","item","index","React","Row","Col","md","lg","xl","Title","Typography","Paragraph","Text","Link","MealItem","location","foodapp","useSelector","_useFetchOneMeal","useFetchOneMeal","replace","error","_useState","useState","_useState2","Checkout","setcheckout","_useState3","_useState4","count","setcount","localcount","Object","keys","forEach","key","includes","push","str","num","parseInt","retnum","useEffect","errormealfetch","individual","Header","onClick","ArrowLeftOutlined","level","strMeal","strArea","strCategory","strTags","split","join","strYoutube","strong","target","href","YoutubeFilled","fontSize","danger","Image","src","strMealThumb","strInstructions","concat","MealItemSkeleton"],"sourceRoot":""}